{
	"info": {
		"_postman_id": "60954b39-c115-48c8-af32-22b270262e5c",
		"name": "SharePoint Embedded",
		"description": "[Microsoft Graph](https://docs.microsoft.com/graph/overview) is the gateway to data and intelligence in Microsoft 365. It provides a unified programmability model that you can use to access the tremendous amount of data in Microsoft 365, Windows 10, and Enterprise Mobility + Security. Use the wealth of data in Microsoft Graph to build apps for organizations and consumers that interact with millions of users.\n\n## Create Environment File\n\nIn order to use the RaaS Postman collection we've just imported, we will need to create a valid environment file that contains all the variables in the underlying scripts from this collection. Most need initial values, but fields like ContainerID and PermissionID are generated in post script execution, and later re-used as parameters in other requests. Once the environment file has been created, make sure the collection is set up to use it. This can be done by selecting the newly created environment in the drop-down near the top right hand of the application window.\n\n| Field |  |\n| --- | --- |\n| ClientID |  |\n| ClientSecret |  |\n| TenantID |  |\n| tid |  |\n| RootSiteUrl |  |\n| ContainerTypeId |  |\n| TenantName |  |\n| ContainerId |  |\n| PermissionId |  |\n| FileId |  |\n\nThis is the environment file set up for our sample app:\n\n<img src=\"https://content.pstmn.io/1dcda27e-020b-42a8-85cd-f2ef52c93db0/UmF3IEVudi5wbmc=\">\n\n## Acquire a delegate Graph token\n\nTo execute Graph APIs on our containers, we will need to first acquire a valid Graph authorization token. This can be done by using the acquire token setup in the Delegated tab. Click on the Delegate tab under the root \"RaaS Postman Collection\" item, and select the Authorization tab. The window should look like this:\n\n<img src=\"https://content.pstmn.io/03cb2159-10a4-485c-ab44-5bbf93522209/ZGVsZWdhdGV0b2tlbi5wbmc=\" width=\"619\" height=\"563\">\n\nThe \"Configure New Token\" workflow pulls the necessary parameters from the environment file and uses them to retrieve a valid token. Pressing the \"Get New Access Token\" may prompt a credentials window if it’s the first time using the collection. The tenants credentials should be entered here for either a regular or admin user. Once complete, you should see the following window appear:\n\n<img src=\"https://content.pstmn.io/d9cd45b9-8591-4b5e-9e41-4010ff07f219/bmV3dG9rZW5nb3QucG5n\" width=\"446\" height=\"295\">\n\nClick \"Proceed\" and you'll be a presented with the newly created access token. Name your token appropriately, and then select \"Use Token\" for it to be including in any further issued Graph request.\n\n<img src=\"https://content.pstmn.io/031fdd54-e4c9-423b-86c7-af4e9839f37b/RGVsZWdhdGUgLSBVc2UgVG9rZW4ucG5n\">\n\n## Acquire a delegate Vroom token\n\nTo execute storageContainer API requests, we need to follow the similar approach we did for Graph tokens, except now we will use the \"Containers\" Authorization tab to do so.\n\n<img src=\"https://content.pstmn.io/ea4cbae5-3bcd-4270-bea5-f8935c0d7a6f/RGVsZWdhdGUgLSAybmQgVG9rZW4ucG5n\">\n\nWe follow the \"Get New Access Token\" flow, entering tenant credentials if prompted, and select \"Use Token\" to terminate the flow. We are now ready to use both Graph container specific calls and Vroom storageContainer endpoints.\n\n## Creating your first storage container\n\nIn order to begin experimenting with the RaaS Postman collection, we will first need a container to interact with. We can create one using the POST request labelled \"Create Container\".\n\n<img src=\"https://content.pstmn.io/ea253da6-ed55-464b-a0c8-7277170bbee3/aW1hZ2UucG5n\" alt=\"Create%20Container%20Request\" width=\"2356\" height=\"519\">\n\nYou can specify the containers display name and description in the \"Body\" tab of the request shown above. When you're ready to create your container, press \"Send\" and await response confirmation that your container was created successfully. You should see a response that returns a list of fields, including the ID of the container as well as the container create time.\n\nThe ID of the container is now stored in your environment file and will be the subject of an further container operations, both Graph or Vroom requests.\n\n## Interacting with storage containers\n\nNow that the Container ID field has been set in our environment file, we can proceed to use the remaining delegate requests in the collection, such as getting a storage containers drive items, or creating permissions on the container. The specifics of how to use these requests can be found in the rest of the documentation below.\n\n<img src=\"https://content.pstmn.io/d52f800d-bb46-4313-a5e6-39ce7b86c64d/QWxsIFBvc3RtYW4gRnVuY3Rpb25hbGl0eS5wbmc=\">",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7048081"
	},
	"item": [
		{
			"name": "Delegated",
			"item": [
				{
					"name": "Containers",
					"item": [
						{
							"name": "List containers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers?$filter=containerTypeId eq {{ContainerTypeId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "containerTypeId eq {{ContainerTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"ContainerId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\": \"My Container\",\r\n    \"description\": \"My container description.\",\r\n    \"containerTypeId\": \"{{ContainerTypeId}}\"\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get container",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}?$select=id,displayName,containerTypeId,status,description,customProperties,itemMajorVersionLimit,isItemVersioningEnabled&$expand=permissions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}"
									],
									"query": [
										{
											"key": "$select",
											"value": "id,displayName,containerTypeId,status,description,customProperties,itemMajorVersionLimit,isItemVersioningEnabled"
										},
										{
											"key": "$expand",
											"value": "permissions"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update container",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\": \"My Updated Container\",\r\n    \"description\": \"My updated container description.\",\r\n    \"itemMajorVersionLimit\": 50,\r\n    \"isItemVersioningEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}"
									]
								},
								"description": "This API will let callers explicitly activate a fileStorageContainer. It is idempotent, so calling it multiple time will yield the same response and will not create any side effects. Upon successfull activation the container's `status` will be set to \"active\"."
							},
							"response": []
						},
						{
							"name": "Activate container",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/activate",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"activate"
									]
								},
								"description": "This API will let callers explicitly activate a fileStorageContainer. It is idempotent, so calling it multiple time will yield the same response and will not create any side effects. Upon successfull activation the container's `status` will be set to \"active\"."
							},
							"response": []
						},
						{
							"name": "List container permissions",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create container permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"PermissionId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"roles\": [\"reader\"],// \"writer\", \"manager\", \"owner\"\r\n  \"grantedToV2\": {\r\n    \"user\": {\r\n      \"userPrincipalName\": \"{{UserAlias}}@{{TenantName}}.onmicrosoft.com\"\r\n      //\"userPrincipalName\": \"{{GroupAlias}}@{{TenantName}}.onmicrosoft.com\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update container permission",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"roles\": [\"writer\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions/{{PermissionId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions",
										"{{PermissionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete container permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"PermissionId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions/{{PermissionId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions",
										"{{PermissionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List container columns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create container column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"ColumnId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    // https://learn.microsoft.com/en-us/graph/api/resources/columndefinition?view=graph-rest-1.0\r\n    \"name\": \"Example\",\r\n    \"displayName\": \"Example\",\r\n    \"description\": \"My column description\",\r\n    \"enforceUniqueValues\": false, // Must be false (true not supported with Containers)\r\n    \"hidden\": false,\r\n    \"indexed\": true, // Set to true to be able to search files based on this column\r\n    \"text\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/textcolumn?view=graph-rest-1.0\r\n        \"allowMultipleLines\": false,\r\n        \"appendChangesToExistingText\": false,\r\n        \"linesForEditing\": 0,\r\n        \"maxLength\": 255\r\n    }\r\n    /*\r\n    // Other supported column types with SharePoint Embedded -- replace the text: {..} property above with one of these:\r\n    // If a column type is not listed here, it's NOT supported with SharePoint Embedded right now. \r\n\r\n    \"boolean\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/booleancolumn?view=graph-rest-1.0\r\n    }\r\n    \"dateTime\": {\r\n        \"displayAs\": \"default | friendly | standard\",\r\n        \"format\": \"dateOnly | dateTime\"\r\n    }\r\n    \"currency\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/currencycolumn?view=graph-rest-1.0\r\n        \"locale\": \"en-us\"\r\n    }\r\n    \"choice\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/choicecolumn?view=graph-rest-1.0\r\n        \"allowTextEntry\": true,\r\n        \"choices\": [\"red\", \"blue\", \"green\"],\r\n        \"displayAs\": \"checkBoxes | dropDownMenu | radioButtons\"\r\n    }\r\n    \"hyperlinkOrPicture\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/hyperlinkorpicturecolumn?view=graph-rest-1.0\r\n        \"isPicture\": false\r\n    }\r\n    \"number\": {\r\n        https://learn.microsoft.com/en-us/graph/api/resources/numbercolumn?view=graph-rest-1.0\r\n        \"decimalPlaces\": \"automatic | none | one | two | three | four | five\",\r\n        \"displayAs\": \"number | percentage\",\r\n        \"maximum\": 10.551,\r\n        \"minimum\": 99.993\r\n    }\r\n    \"personOrGroup\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/personorgroupcolumn?view=graph-rest-1.0\r\n        \"allowMultipleSelection\": true,\r\n        \"displayAs\": \"account | contentType | created | department | ...\",\r\n        \"chooseFromType\": \"peopleAndGroups | peopleOnly\"\r\n    }\r\n    */\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get container column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns/{{ColumnId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns",
										"{{ColumnId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete container column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"ColumnId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns/{{ColumnId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns",
										"{{ColumnId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get container properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/customProperties",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"customProperties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set container properties",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    /*\r\n    Format\r\n    \"{custom_name}\": {\r\n        \"value\": \"{property_value}\",\r\n        \"isSearchable\": true | false //Whether or not the property can be used with search queries\r\n    }\r\n    */\r\n    \"urlPath\": {  \r\n        \"value\": \"northwind\",   \r\n        \"isSearchable\": false  \r\n    },\r\n    \"tags\": {\r\n        \"value\": \"northwind traders nwt nw\",\r\n        \"isSearchable\": true\r\n    },\r\n    \"department\": { \r\n        \"value\": \"finance\",   \r\n        \"isSearchable\": true \r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/customProperties",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"customProperties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List deleted containers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/deletedContainers?$filter=containerTypeId eq {{ContainerTypeId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"deletedContainers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "containerTypeId eq {{ContainerTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Permanently delete container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"ContainerId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/deletedContainers/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"deletedContainers",
										"{{ContainerId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Sharing",
							"item": [
								{
									"name": "List file permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/permissions",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"permissions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create file invite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"if (pm.response.code === 200) {\r",
													"    var json = pm.response.json();\r",
													"    postman.setEnvironmentVariable(\"PermissionId\", json.value[0].id);\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"requireSignIn\": true,\r\n    \"sendInvitation\": false,\r\n    \"roles\": [\"write\"],\r\n    \"recipients\": [{\r\n            \"email\": \"{{UserAlias}}@{{TenantName}}.onmicrosoft.com\"\r\n        }\r\n    ],\r\n    \"message\": \"Here is my sharing message!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/invite",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"invite"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create file link",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"if (pm.response.code === 201) {\r",
													"    var json = pm.response.json();\r",
													"    postman.setEnvironmentVariable(\"PermissionId\", json.id);\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"type\": \"view\", //or \"edit\"\r\n    \"scope\": \"organization\" //or \"anonymous\" or \"users\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/createLink",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"createLink"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get file permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/permissions/{{PermissionId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"permissions",
												"{{PermissionId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete file permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 204) {\r",
													"    pm.environment.unset(\"PermissionId\");\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/permissions/{{PermissionId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"permissions",
												"{{PermissionId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get drive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/root/children?$expand=listitem($expand=fields)",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"root",
										"children"
									],
									"query": [
										{
											"key": "$filter",
											"value": "startswith(listitem/fields/MyColumn, 'My Value')",
											"disabled": true
										},
										{
											"key": "$expand",
											"value": "listitem($expand=fields)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List items with field filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items?$filter=startswith(listitem/fields/MyColumn, 'My Value')&$expand=listitem($expand=fields)",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items"
									],
									"query": [
										{
											"key": "$filter",
											"value": "startswith(listitem/fields/MyColumn, 'My Value')"
										},
										{
											"key": "$expand",
											"value": "listitem($expand=fields)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"FileId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": ""
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/root:/{{file_name_with_extension}}:/content",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"root:",
										"{{file_name_with_extension}}:",
										"content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Northwind Proposal Updated.docx\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"FileId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List file fields",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/listitem/fields",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"listitem",
										"fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set file field",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Example\": \"My Value\" // null will clear the field value\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/listitem/fields",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"listitem",
										"fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "List file thumbnails",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/thumbnails",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"thumbnails"
									]
								}
							},
							"response": []
						},
						{
							"name": "List file versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/versions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create file preview",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/preview",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"preview"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"FolderId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New Folder\",\n  \"folder\": {}\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/root/children",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"root",
										"children"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"New Folder Updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List folder items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}/children",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}",
										"children"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"FolderId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search drive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/root/search(q='{contoso}')",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"root",
										"search(q='{contoso}')"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Search containers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"drive\"\n            ],\n            \"query\": {\n                \"queryString\": \"ContainerTypeId:{{ContainerTypeId}}\"\n                //\"queryString\": \"Title:'My Container'\" //Title matches container.displayName\n                //\"queryString\": \"Description:'description'\" //Description matches container.description\n                //\"queryString\": \"department:'finance'\" //Matches container.customProperty named 'department' with isSearchable===true\n            },\n            \"sharePointOneDriveOptions\": {\n                \"includeHiddenContent\": true\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search container items",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"ContainerId:{{ContainerId}}\"\n                //\"queryString\": \"'project' AND ContainerId:{{ContainerId}}\" //Full-text search on file content\n                //\"queryString\": \"ContainerId:{{ContainerId}} AND MyColumnOWSTEXT:'My Value'\" //Use field value on custom metadata appending 'OWSTEXT' after actual column name\n                //\"queryString\": \"ContainerId:{{ContainerId}} AND Title:'{{filename}}'\"\n                //\"queryString\": \"ContainerId:{{ContainerId}} AND FileType:docx\"\n            },\n            \"sharePointOneDriveOptions\": {\n                \"includeHiddenContent\": true\n            }\n            /*\n            ,\n            \"from\": 0,\n            \"size\": 15,\n            \"sortProperties\": [\n                {\n                    \"name\": \"lastModifiedDateTime\",\n                    \"isDescending\": \"true\" // default is false\n                }\n            ]\n            */\n        }\n    ]\n    /*\n    ,\"queryAlterationOptions\": {\n        \"enableSuggestion\": true,\n        \"enableModification\": true\n    }\n    */\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Security",
					"item": [
						{
							"name": "eDiscovery",
							"item": [
								{
									"name": "Case Creation",
									"item": [
										{
											"name": "List ediscoveryCases",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ediscoveryCase",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoveryCaseId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"Test Container Queries 2\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get ediscoveryCase",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ediscoveryCase",
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"externalId\": \"Updated external case value 12345\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Custodians",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"custodianId\", json.id);",
															"postman.setEnvironmentVariable(\"custodianEmail\", json.email);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\":\"{{custodianEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians"
													]
												}
											},
											"response": []
										},
										{
											"name": "List ediscoveryCustodian",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custodian userSource",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"custodianUserSource\", json.id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{custodianEmail}}\",\n    \"includedSources\": \"mailbox, site\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/{{custodianId}}/userSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians",
														"{{custodianId}}",
														"userSources"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoveryCustodian: applyHold",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"{{custodianId}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/applyHold",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians",
														"applyHold"
													]
												}
											},
											"response": []
										},
										{
											"name": "List userSources",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/{{custodianId}}/userSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians",
														"{{custodianId}}",
														"userSources"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ediscoveryNoncustodialDataSources",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"noncustodialId\", json.id);",
															"postman.setEnvironmentVariable(\"noncustodialDataSource\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataSource\" : { \n        \"@odata.type\" : \"microsoft.graph.security.siteSource\", \n        \"site@odata.bind\" : \"{{SiteId}}\" \n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialDataSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"noncustodialDataSources"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoveryNoncustodialDataSource: applyHold",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"{{noncustodialId}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialDataSources/applyHold",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"noncustodialDataSources",
														"applyHold"
													]
												}
											},
											"response": []
										},
										{
											"name": "List ediscoveryNoncustodialDataSources",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialDataSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"noncustodialDataSources"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Workflow automation",
									"item": [
										{
											"name": "Create searches",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoverySearchId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"Microsoft Graph Search\",\n    \"description\": \"This is an eDiscovery Premium search using Microsoft Graph\",\n    \"contentQuery\": \"HasAttachment=true\",\n    \"custodianSources@odata.bind\": [\n        \"https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/{{custodianId}}/userSources/{{custodianUserSource}}\"\n    ],\n    \"noncustodialSources@odata.bind\": [\n        \"https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialdatasources/{{noncustodialDataSource}}\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches"
													]
												}
											},
											"response": []
										},
										{
											"name": "List searches",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoverySearch: estimate Statistics",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches/{{ediscoverySearchId}}/estimateStatistics",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches",
														"{{ediscoverySearchId}}",
														"estimateStatistics"
													]
												}
											},
											"response": []
										},
										{
											"name": "List lastEstimateStatisticsOperation",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches/{{ediscoverySearchId}}/lastEstimateStatisticsOperation",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches",
														"{{ediscoverySearchId}}",
														"lastEstimateStatisticsOperation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create reviewSets",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoveryReviewSetId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"My Microsoft Graph Review Set\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets"
													]
												}
											},
											"response": []
										},
										{
											"name": "List reviewSets",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoveryReviewSet: addToReviewSet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"search\": {\n        \"id\": \"{{ediscoverySearchId}}\"\n    },\n    \"additionalDataOptions\": \"linkedFiles\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/addToReviewSet",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"addToReviewSet"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ediscoveryReviewSetQuery",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoveryReviewSetQueryId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"Microsoft Graph Query\",\n    \"contentQuery\": \"(Author=\\\"edison\\\")\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ediscoveryReviewSetQuery",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"Microsoft Graph Query (Update)\",\n    \"contentQuery\": \"(ContentType=document)\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries/{{ediscoveryReviewSetQueryId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries",
														"{{ediscoveryReviewSetQueryId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "List queries",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete ediscoveryReviewSetQuery",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries/{{ediscoveryReviewSetQueryId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries",
														"{{ediscoveryReviewSetQueryId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "List caseOperations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/operations",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"operations"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Get alerts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts with high severity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Severity eq 'High'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Severity eq 'High'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts from Azure Security Center",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=vendorInformation/provider eq 'ASC'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "vendorInformation/provider eq 'ASC'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Category eq 'ransomware'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Category eq 'ransomware'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by destination",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=networkConnections/any(d:d/destinationAddress eq '{destination-address}')",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "networkConnections/any(d:d/destinationAddress eq '{destination-address}')"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Status eq 'NewAlert'&$top=1",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Status eq 'NewAlert'"
										},
										{
											"key": "$top",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get secure scores",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/secureScores?$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"secureScores"
									],
									"query": [
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get secure scores control profiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/secureScoreControlProfiles?$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"secureScoreControlProfiles"
									],
									"query": [
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get TI indicators",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TIIndicatorId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/tiIndicators",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"tiIndicators"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get TI indicator by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/tiIndicators/{{TIIndicatorId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"tiIndicators",
										"{{TIIndicatorId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get security actions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/securityActions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"securityActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get security action by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/securityActions/{{SecurityActionsId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"securityActions",
										"{{SecurityActionsId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List retention labels",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"labels",
										"retentionLabels"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "useBrowser",
						"value": false,
						"type": "boolean"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://login.microsoftonline.com/{{ConsumingTenantId}}/oauth2/v2.0/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://login.microsoftonline.com/{{ConsumingTenantId}}/oauth2/v2.0/authorize",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "FileStorageContainer.Selected Files.Read.All offline_access",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "authorization_code",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{ClientSecret}}",
						"type": "string"
					},
					{
						"key": "state",
						"value": "",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "Graph Delegated Token",
						"type": "string"
					},
					{
						"key": "redirect_uri",
						"value": "https://oauth.pstmn.io/v1/browser-callback",
						"type": "string"
					},
					{
						"key": "tokenType",
						"value": "",
						"type": "string"
					},
					{
						"key": "accessToken",
						"value": "",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{ClientID}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "Containers",
					"item": [
						{
							"name": "Register ContainerType",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"utils.checkRequiredVariables();\r",
											"if (!utils.getRootSiteUrl()) {\r",
											"    throw new Error(\"RootSiteUrl not set in selected Postman environment\");\r",
											"}\r",
											"eval(utils.getRsaLibraryForEval());\r",
											"\r",
											"pm.environment.unset(\"AppOnlyCertSPOToken\");\r",
											"const assertionJwt = utils.getAssertionJwt(KJUR, KEYUTIL);\r",
											"const scope = utils.getRootSiteUrl() + \".default\";\r",
											"const tokenRequest = utils.getTokenRequest(assertionJwt, scope);\r",
											"utils.getToken(pm.sendRequest, tokenRequest, (token) => {\r",
											"    pm.environment.set(\"AppOnlyCertSPOToken\", token);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AppOnlyCertSPOToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"value\": [\r\n        {\r\n            \"appId\": \"{{ClientID}}\",\r\n            \"delegated\": [\"full\"],\r\n            \"appOnly\": [\"full\"]\r\n        },\r\n        {\r\n            /*\r\n                This adds the Graph Explorer AppId to your Container Type with full permmissions\r\n                on delegated access. Note that you cannot create Containers with Graph Explore as\r\n                those calls must be made with a confidential client, and Graph Explorer only creates\r\n                public client tokens. But other APIs, include the Drive and DriveItem related calls,\r\n                should work. \r\n            */\r\n            \"appId\": \"de8bc8b5-d9f9-48b1-a8ad-b748da725064\", // Graph Explorer AppId\r\n            \"delegated\": [\"full\"],\r\n            \"appOnly\": [\"none\"] //Graph Explorer only supports delegated auth\r\n        }\r\n    ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{RootSiteUrl}}/_api/v2.1/storageContainerTypes/{{ContainerTypeId}}/applicationPermissions",
									"host": [
										"{{RootSiteUrl}}"
									],
									"path": [
										"_api",
										"v2.1",
										"storageContainerTypes",
										"{{ContainerTypeId}}",
										"applicationPermissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List containers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers?$filter=containerTypeId eq {{ContainerTypeId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "containerTypeId eq {{ContainerTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"ContainerId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\": \"My Container\",\r\n    \"description\": \"My container description.\",\r\n    \"containerTypeId\": \"{{ContainerTypeId}}\"\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get container",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}?$select=id,displayName,containerTypeId,status,description,customProperties,itemMajorVersionLimit,isItemVersioningEnabled&$expand=permissions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}"
									],
									"query": [
										{
											"key": "$select",
											"value": "id,displayName,containerTypeId,status,description,customProperties,itemMajorVersionLimit,isItemVersioningEnabled"
										},
										{
											"key": "$expand",
											"value": "permissions"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update container",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\": \"My Updated Container\",\r\n    \"description\": \"My updated container description.\",\r\n    \"itemMajorVersionLimit\": 50,\r\n    \"isItemVersioningEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}"
									]
								},
								"description": "This API will let callers explicitly activate a fileStorageContainer. It is idempotent, so calling it multiple time will yield the same response and will not create any side effects. Upon successfull activation the container's `status` will be set to \"active\"."
							},
							"response": []
						},
						{
							"name": "Activate container",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/activate",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"activate"
									]
								},
								"description": "This API will let callers explicitly activate a fileStorageContainer. It is idempotent, so calling it multiple time will yield the same response and will not create any side effects. Upon successfull activation the container's `status` will be set to \"active\"."
							},
							"response": []
						},
						{
							"name": "List container permissions",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create container permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"PermissionId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"roles\": [\"reader\"],// \"writer\", \"manager\", \"owner\"\r\n  \"grantedToV2\": {\r\n    \"user\": {\r\n      \"userPrincipalName\": \"{{UserAlias}}@{{TenantName}}.onmicrosoft.com\"\r\n      //\"userPrincipalName\": \"{{GroupAlias}}@{{TenantName}}.onmicrosoft.com\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update container permission",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"roles\": [\"writer\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions/{{PermissionId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions",
										"{{PermissionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete container permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"PermissionId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/permissions/{{PermissionId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"permissions",
										"{{PermissionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List container columns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create container column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"ColumnId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    // https://learn.microsoft.com/en-us/graph/api/resources/columndefinition?view=graph-rest-1.0\r\n    \"name\": \"MyColumn\",\r\n    \"displayName\": \"My Column\",\r\n    \"description\": \"My column description\",\r\n    \"enforceUniqueValues\": false, // Must be false (true not supported with Containers)\r\n    \"hidden\": false,\r\n    \"indexed\": true, // Set to true to be able to search files based on this column\r\n    \"text\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/textcolumn?view=graph-rest-1.0\r\n        \"allowMultipleLines\": false,\r\n        \"appendChangesToExistingText\": false,\r\n        \"linesForEditing\": 0,\r\n        \"maxLength\": 255\r\n    }\r\n    /*\r\n    // Other supported column types with SharePoint Embedded -- replace the text: {..} property above with one of these:\r\n    // If a column type is not listed here, it's NOT supported with SharePoint Embedded right now. \r\n\r\n    \"boolean\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/booleancolumn?view=graph-rest-1.0\r\n    }\r\n    \"dateTime\": {\r\n        \"displayAs\": \"default | friendly | standard\",\r\n        \"format\": \"dateOnly | dateTime\"\r\n    }\r\n    \"currency\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/currencycolumn?view=graph-rest-1.0\r\n        \"locale\": \"en-us\"\r\n    }\r\n    \"choice\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/choicecolumn?view=graph-rest-1.0\r\n        \"allowTextEntry\": true,\r\n        \"choices\": [\"red\", \"blue\", \"green\"],\r\n        \"displayAs\": \"checkBoxes | dropDownMenu | radioButtons\"\r\n    }\r\n    \"hyperlinkOrPicture\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/hyperlinkorpicturecolumn?view=graph-rest-1.0\r\n        \"isPicture\": false\r\n    }\r\n    \"number\": {\r\n        https://learn.microsoft.com/en-us/graph/api/resources/numbercolumn?view=graph-rest-1.0\r\n        \"decimalPlaces\": \"automatic | none | one | two | three | four | five\",\r\n        \"displayAs\": \"number | percentage\",\r\n        \"maximum\": 10.551,\r\n        \"minimum\": 99.993\r\n    }\r\n    \"personOrGroup\": {\r\n        // https://learn.microsoft.com/en-us/graph/api/resources/personorgroupcolumn?view=graph-rest-1.0\r\n        \"allowMultipleSelection\": true,\r\n        \"displayAs\": \"account | contentType | created | department | ...\",\r\n        \"chooseFromType\": \"peopleAndGroups | peopleOnly\"\r\n    }\r\n    */\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get container column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns/{{ColumnId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns",
										"{{ColumnId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete container column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"ColumnId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/columns/{{ColumnId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"columns",
										"{{ColumnId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get container properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/customProperties",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"customProperties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set container properties",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    /*\r\n    Format\r\n    \"{custom_name}\": {\r\n        \"value\": \"{property_value}\",\r\n        \"isSearchable\": true | false //Whether or not the property can be used with search queries\r\n    }\r\n    */\r\n    \"urlPath\": {  \r\n        \"value\": \"northwind\",   \r\n        \"isSearchable\": false  \r\n    },\r\n    \"tags\": {\r\n        \"value\": \"northwind traders nwt nw\",\r\n        \"isSearchable\": true\r\n    },\r\n    \"department\": { \r\n        \"value\": \"finance\",   \r\n        \"isSearchable\": true \r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}/customProperties",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}",
										"customProperties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/containers/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"containers",
										"{{ContainerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List deleted containers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/deletedContainers?$filter=containerTypeId eq {{ContainerTypeId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"deletedContainers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "containerTypeId eq {{ContainerTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Permanently delete container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"ContainerId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/storage/fileStorage/deletedContainers/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"storage",
										"fileStorage",
										"deletedContainers",
										"{{ContainerId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									"utils.checkRequiredVariables();\r",
									"eval(utils.getRsaLibraryForEval());\r",
									"\r",
									"pm.environment.unset(\"AppOnlyCertGraphToken\");\r",
									"const assertionJwt = utils.getAssertionJwt(KJUR, KEYUTIL);\r",
									"const tokenRequest = utils.getTokenRequest(assertionJwt);\r",
									"utils.getToken(pm.sendRequest, tokenRequest, (token) => {\r",
									"    pm.environment.set(\"AppOnlyCertGraphToken\", token);\r",
									"});\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Sharing",
							"item": [
								{
									"name": "List file permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/permissions",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"permissions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create file invite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"if (pm.response.code === 200) {\r",
													"    var json = pm.response.json();\r",
													"    postman.setEnvironmentVariable(\"PermissionId\", json.value[0].id);\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"requireSignIn\": true,\r\n    \"sendInvitation\": false,\r\n    \"roles\": [\"write\"],\r\n    \"recipients\": [{\r\n            \"email\": \"{{UserAlias}}@{{TenantName}}.onmicrosoft.com\"\r\n        }\r\n    ],\r\n    \"message\": \"Here is my sharing message!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/invite",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"invite"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create file link",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"if (pm.response.code === 201) {\r",
													"    var json = pm.response.json();\r",
													"    postman.setEnvironmentVariable(\"PermissionId\", json.id);\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"type\": \"view\", //or \"edit\"\r\n    \"scope\": \"organization\" //or \"anonymous\" or \"users\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/createLink",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"createLink"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get file permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/permissions/{{PermissionId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"permissions",
												"{{PermissionId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete file permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 204) {\r",
													"    pm.environment.unset(\"PermissionId\");\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/permissions/{{PermissionId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"drives",
												"{{ContainerId}}",
												"items",
												"{{FileId}}",
												"permissions",
												"{{PermissionId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get drive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/root/children?$expand=listitem($expand=fields)",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"root",
										"children"
									],
									"query": [
										{
											"key": "$filter",
											"value": "startswith(listitem/fields/MyColumn, 'My Value')",
											"disabled": true
										},
										{
											"key": "$expand",
											"value": "listitem($expand=fields)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List items with field filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items?$filter=startswith(listitem/fields/MyColumn, 'My Value')&$expand=listitem($expand=fields)",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items"
									],
									"query": [
										{
											"key": "$filter",
											"value": "startswith(listitem/fields/MyColumn, 'My Value')"
										},
										{
											"key": "$expand",
											"value": "listitem($expand=fields)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"FileId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": ""
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/root:/{{file_name_with_extension}}:/content",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"root:",
										"{{file_name_with_extension}}:",
										"content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Northwind Proposal Updated.docx\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"FileId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List file fields",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/listitem/fields",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"listitem",
										"fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set file field",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"MyColumn\": \"My Value\" // null will clear the field value\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/listitem/fields",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"listitem",
										"fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "List file thumbnails",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/thumbnails",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"thumbnails"
									]
								}
							},
							"response": []
						},
						{
							"name": "List file versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/versions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create file preview",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FileId}}/preview",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FileId}}",
										"preview"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.code === 201) {\r",
											"    var json = pm.response.json();\r",
											"    postman.setEnvironmentVariable(\"FolderId\", json.id);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New Folder\",\n  \"folder\": {}\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/root/children",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"root",
										"children"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"New Folder Updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List folder items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}/children",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}",
										"children"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"FolderId\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/items/{{FolderId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"items",
										"{{FolderId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search drive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/drives/{{ContainerId}}/root/search(q='{contoso}')",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"drives",
										"{{ContainerId}}",
										"root",
										"search(q='{contoso}')"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Search containers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"drive\"\n            ],\n            \"query\": {\n                \"queryString\": \"ContainerTypeId:{{ContainerTypeId}}\"\n                //\"queryString\": \"Title:'My Container'\" //Title matches container.displayName\n                //\"queryString\": \"Description:'description'\" //Description matches container.description\n                //\"queryString\": \"department:'finance'\" //Matches container.customProperty named 'department' with isSearchable===true\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search container items",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"ContainerId:{{ContainerId}}\"\n                //\"queryString\": \"'project' AND ContainerId:{{ContainerId}}\" //Full-text search on file content\n                //\"queryString\": \"ContainerId:{{ContainerId}} AND MyColumn:'My Value'\" //Use field value on custom metadata\n                //\"queryString\": \"ContainerId:{{ContainerId}} AND Title:'{{filename}}'\"\n                //\"queryString\": \"ContainerId:{{ContainerId}} AND FileType:docx\"\n            }\n            /*\n            ,\n            \"from\": 0,\n            \"size\": 15,\n            \"sortProperties\": [\n                {\n                    \"name\": \"lastModifiedDateTime\",\n                    \"isDescending\": \"true\" // default is false\n                }\n            ]\n            */\n        }\n    ]\n    /*\n    ,\"queryAlterationOptions\": {\n        \"enableSuggestion\": true,\n        \"enableModification\": true\n    }\n    */\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "## Create Environment File\n\nIn order to use the RaaS Postman collection we've just imported, we will need to create a valid environment file that contains all the variables in the underlying scripts from this collection. Most need initial values, but fields like ContainerID and PermissionID are generated in post script execution, and later re-used as parameters in other requests. Once the environment file has been created, make sure the collection is set up to use it. This can be done by selecting the newly created environment in the drop-down near the top right hand of the application window.\n\n<img src=\"https://content.pstmn.io/de257c5f-524a-4d66-a5f5-79366dcf2675/RW52IFNjaGVtYS5wbmc=\">\n\nTake note of the key field additions: **tid** (the tenant ID from AAD where your application resides in), **CertThumbprint**, and **CertPrivateKey**\n\n## Run the create-certificate.ps1 script\n\nNext, you will need to run the provided `create-certificate.ps1` in an administrator privileged Powershell window to generate the .cer and .key files that will use in the following steps. Make sure to run the script in a newly created folder where the path is easily found. You will be prompted to enter a certificate name and the files will `.cer` and `.key` files will be written in the root of the folder you executed your script from.\n\n## Upload the .cer file to your Azure AD app\n\nOpen the `Certificates & Secrets` pane within your Application Definition in Azure Portal, and proceed to upload the `.cer` file that was created above. Once uploaded, make sure you copy the full thumbprint to your clipboard. You will use this to populate the `CertThumbprint` value in your Postman Environment File.\n\n<img src=\"https://content.pstmn.io/4a6306b0-4ca9-4ed5-8d99-318d31c92a60/Y2VyIHNlbGVjdGlvbi5wbmc=\" width=\"608\" height=\"438\">\n\n<img src=\"https://content.pstmn.io/5bdb391a-1d98-4f30-86e9-165ba1c32232/QUFEUG9ydGFsLnBuZw==\">\n\n## Set the CertThumbprint environment variable\n\nNext, open your Environment file and set the value of CertThumbprint to your copied value, and save the file. Refer to the Schema screenshot earlier for reference.\n\n## Open .key file and retrieve its contents\n\nOpen the .key file that the Powershell script also created in a text editor and copy its entire contents to the clipboard. You will use this to set the value of the CertPrivateKey environment variable in Postman.\n\n<img src=\"https://content.pstmn.io/6431ada4-3978-48fa-9892-5cc0ef992b61/a2V5IHNlbGVjdGlvbi5wbmc=\">\n\n<img src=\"https://content.pstmn.io/9aa5ea5a-5918-40e0-9305-5b93dcee86c2/cHJpdmF0ZWtleS5wbmc=\">\n\n## Set the CertPrivateKey environment variable\n\nPaste the string into the `CertPrivateKey` value and save the file. Both `CertThumbprint` and `CertPrivateKey` should now be set.\n\n<img src=\"https://content.pstmn.io/b6be5564-20f2-4124-8565-ac5743dfcc23/RW52IC0gd2l0aCBQcml2YXRlIEtleS5wbmc=\" alt=\"\">\n\n## Run the Create Container request in the Application/Containers folder\n\nYou should now be able to run the `CreateContainer` in the Application/Containers folder. Execute the request and confirm that container creation was successful. Refer to the API reference for complete documentation of request body etc.\n\n<img src=\"https://content.pstmn.io/6ad80261-bab4-48b1-a03b-a3b05d547df1/Q29udGFpbmVyQ3JlYXRpb24ucG5n\" width=\"634\" height=\"247\">",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessTokenUrl",
						"value": "https://login.microsoftonline.com/{{ConsumingTenantId}}/oauth2/v2.0/token",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "https://graph.microsoft.com/.default",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "client_credentials",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://login.microsoftonline.com/{{ConsumingTenantId}}/oauth2/v2.0/token",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "Graph App-Only Token",
						"type": "string"
					},
					{
						"key": "refreshRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "tokenRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "authRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "redirect_uri",
						"value": "https://oauth.pstmn.io/v1/browser-callback",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{ClientSecret}}",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{ClientID}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"//Setting the utils direction without any let/const/var assignment makes it available as a global in Postman scripts",
							"utils = {",
							"",
							"    getRsaLibrary: function () {",
							"        return pm.globals.get('jsrsasign-js');",
							"    },",
							"",
							"    getClientId: function () {",
							"        return pm.environment.get('ClientID');",
							"    },",
							"",
							"    getConsumingTenantId: function () {",
							"        return pm.environment.get('ConsumingTenantId');",
							"    },",
							"",
							"    getCertThumbprint: function () {",
							"        return pm.environment.get('CertThumbprint');",
							"    },",
							"",
							"    getCertPrivateKey: function () {",
							"        return pm.environment.get('CertPrivateKey');",
							"    },",
							"",
							"    getCertPassword: function () {",
							"        return pm.environment.get('CertPassword');",
							"    },",
							"",
							"    getRootSiteUrl: function () {",
							"        return pm.environment.get('RootSiteUrl');",
							"    },",
							"",
							"    checkRequiredVariables: function () {",
							"        if (!utils.getRsaLibrary()) {",
							"            throw new Error(\"jsrsasign-js script not set in globals\");",
							"        }",
							"        if (!utils.getClientId()) {",
							"            throw new Error(\"ClientID not set in selected Postman environment\");",
							"        }",
							"        if (!utils.getConsumingTenantId()) {",
							"            throw new Error(\"ConsumingTenantId not set in selected Postman environment\");",
							"        }",
							"        if (!utils.getCertThumbprint()) {",
							"            throw new Error(\"CertThumbprint not set in selected Postman environment\");",
							"        }",
							"        if (!utils.getCertPrivateKey()) {",
							"            throw new Error(\"CertPrivateKey not set in selected Postman environment\");",
							"        }",
							"    },",
							"",
							"    getRsaLibraryForEval: function () {",
							"        return \"var navigator = {}; var window = {}; \" + utils.getRsaLibrary();",
							"    },",
							"",
							"    getTokenRequest: function (assertionJwt, scope = \"https://graph.microsoft.com/.default\") {",
							"        return {",
							"            url: utils.getTokenUrl(),",
							"            method: 'POST',",
							"            header: {",
							"                'Content-Type': 'application/x-www-form-urlencoded'",
							"            },",
							"            body: {",
							"                mode: 'urlencoded',",
							"                urlencoded: [",
							"                    { key: 'client_assertion_type', value: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer' },",
							"                    { key: 'client_assertion', value: assertionJwt },",
							"                    { key: 'client_id', value: utils.getClientId() },",
							"                    { key: 'scope', value: scope },",
							"                    { key: 'grant_type', value: 'client_credentials' }",
							"                ]",
							"            }",
							"        };",
							"    },",
							"",
							"    getToken: function (sendRequest, tokenRequest, onSuccess) {",
							"        sendRequest(tokenRequest, (error, response) => {",
							"            if (error) {",
							"                throw new Error('Unable to acquire access token: ' + error);",
							"            } else {",
							"                const responseJson = response.json();",
							"                const token = responseJson.access_token;",
							"                if (!token) {",
							"                    throw Error(\"Invalid or no access token received\");",
							"                }",
							"                onSuccess(token);",
							"            }",
							"        });",
							"    },",
							"",
							"    getAssertionJwt: function (KJUR, KEYUTIL) {",
							"        const header = {",
							"            'alg': 'RS256',",
							"            'typ': 'JWT',",
							"            'x5t': utils.safeBase64EncodedThumbprint(utils.getCertThumbprint())",
							"        };",
							"",
							"        const now = utils.getTimeInSec();",
							"        const payload = {",
							"            'aud': utils.getTokenUrl(),",
							"            'exp': now + 60 * 60,",
							"            'iss': utils.getClientId(),",
							"            'jti': pm.variables.replaceIn('{{$guid}}'),",
							"            'nbf': now,",
							"            'sub': utils.getClientId(),",
							"            'iat': now",
							"        };",
							"",
							"        const encryptedPk = utils.getCertPrivateKey();",
							"        let decryptedPk = encryptedPk;",
							"        if (utils.getCertPassword()) {",
							"            decryptedPk = KEYUTIL.getKey(encryptedPk, utils.getCertPassword());",
							"        }",
							"        const sHeader = JSON.stringify(header);",
							"        const sPayload = JSON.stringify(payload);",
							"        return KJUR.jws.JWS.sign(header.alg, sHeader, sPayload, decryptedPk);",
							"    },",
							"",
							"    getTimeInSec: function () {",
							"        return Math.floor(Date.now() / 1000);",
							"    },",
							"",
							"    getTokenUrl: function () {",
							"        const tid = utils.getConsumingTenantId();",
							"        return `https://login.microsoftonline.com/${tid}/oauth2/v2.0/token`;",
							"    },",
							"",
							"    safeBase64EncodedThumbprint: function (thumbprint) {",
							"        const numCharIn128BitHexString = 128/8*2;",
							"        const numCharIn160BitHexString = 160/8*2;",
							"        const thumbprintSizes  = {};",
							"        thumbprintSizes[numCharIn128BitHexString] = true;",
							"        thumbprintSizes[numCharIn160BitHexString] = true;",
							"        const thumbprintRegExp = /^[a-f\\d]*$/;",
							"",
							"        const hexString = thumbprint.toLowerCase().replace(/:/g, '').replace(/ /g, '');",
							"",
							"        if (!thumbprintSizes[hexString.length] || !thumbprintRegExp.test(hexString)) {",
							"            throw new Error(\"CertThumbprint in selected Postman environment does not match a known format\");",
							"        }",
							"",
							"        const base64 = (Buffer.from(hexString, 'hex')).toString('base64');",
							"        return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');",
							"    },",
							"",
							"};",
							"",
							"// download jsrsasign library and save it to a global variable",
							"if (!pm.globals.has('jsrsasign-js')) {",
							"    pm.sendRequest(",
							"        'https://kjur.github.io/jsrsasign/jsrsasign-all-min.js',",
							"        function (err, res) {",
							"            if (err) {",
							"                throw new Error(\"Unable to download required RSA library: \" + err);",
							"            } else {",
							"                console.log('Downloaded RSA library');",
							"                pm.globals.set('jsrsasign-js', res.text());",
							"            }",
							"        }",
							"    );",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if(!pm.request.headers.find(\"SdkVersion\")) {",
					"    pm.request.headers.add({key: \"SdkVersion\", value: \"postman-graph/v2.0\"});",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "variable_key",
			"value": ""
		}
	]
}